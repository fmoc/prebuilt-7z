name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - VERSION: 21.02
            URL: https://sourceforge.net/projects/sevenzip/files/7-Zip/21.02/7z2102-src.7z/download
          - VERSION: 21.02
            URL: https://sourceforge.net/projects/sevenzip/files/7-Zip/21.02/7z2102-src.7z/download
            BUILD_ASM: 1
          - VERSION: 21.03
            URL: https://7-zip.org/a/7z2103-src.7z
          - VERSION: 21.03
            URL: https://7-zip.org/a/7z2103-src.7z
            BUILD_ASM: 1
          - VERSION: 21.06
            URL: https://7-zip.org/a/7z2106-src.7z
          - VERSION: 21.06
            URL: https://7-zip.org/a/7z2106-src.7z
            BUILD_ASM: 1
          - VERSION: 21.07
            URL: https://7-zip.org/a/7z2107-src.7z
          - VERSION: 21.07
            URL: https://7-zip.org/a/7z2107-src.7z
            BUILD_ASM: 1

    name: 7-zip ${{ matrix.VERSION }} BUILD_ASM=${{ matrix.BUILD_ASM }}
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ matrix.VERSION }}
      URL: ${{ matrix.URL }}
      BUILD_ASM: ${{ matrix.BUILD_ASM }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build binary
        run: |
          bash -ex build-in-docker.sh

          if [[ "$BUILD_ASM" == "" ]]; then
            archive_name=prebuilt-7z-"$VERSION"-x86_64.tar.gz
          else
            archive_name=prebuilt-7z-"$VERSION"-x86_64-asm.tar.gz
          fi

          tar cfvz "$archive_name" ./7z ./7zz

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 7-zip ${{ matrix.VERSION }} BUILD_ASM=${{ matrix.BUILD_ASM }}
          path: |
            prebuilt-7z*.tar.gz

  upload:
    name: Create release and upload artifacts
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/*7z*.tar*
